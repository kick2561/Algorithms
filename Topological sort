#include <bits/stdc++.h>

using namespace std;
int mx = pow(10,6)+3;
vector<vector<int>> g(mx+1);
stack<int>s;
vector<int>vis(mx+1,0);
vector<int>in(mx+1,0),ans;
void dfs(int x){
    vis[x]=1;
    for(int i=0;i<g[x].size();i++){
        if(vis[g[x][i]]==0){
            dfs(g[x][i]);
        }
    }
    s.push(x);
}
int main() {
    int n;
    int m;
    cin>>n>>m;
    int u,v;
    for(int i=0;i<m;i++){
        cin>>u>>v;
        g[u].push_back(v);
    }
    cout<<"Topological sort\n";
    for(int i=0;i<=n;i++){
        for(int x : g[i]){
            in[x]++;
        }
    }
    queue<int>q;
    for(int i=0;i<=n;i++){
        if(in[i]==0){
            vis[i]=1;
            q.push(i);
        }
    }
    while(!q.empty()){
        int t = q.front();
        q.pop();
        ans.push_back(t);
        for(int x : g[t]){
            in[x]--;
            if(in[x]==0&&vis[x]==0){
                q.push(x);
                vis[x]=1;
            }
        }
    }
    for(int x : ans){
        cout<<x<<"  ";
    }
    // while(!s.empty()){
    //     cout<<s.top()<<"    ";
    //     s.pop();
    // }
    return 0;
}
/*
5  8
1   2
3    4
3   2
3   1
5     1
4     2
5     4
1   5

0-1,2,3,
1-5
2-5
3-4
4-5
5-
6-0
6   4  1  2   3  0   5
*/
